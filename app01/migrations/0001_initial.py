# Generated by Django 2.0 on 2019-04-24 14:44

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.CharField(max_length=32, verbose_name='邮箱')),
                ('name', models.CharField(max_length=20, verbose_name='用户名')),
                ('is_super', models.BooleanField(default=False, verbose_name='是否为管理员')),
                ('phone', models.CharField(max_length=11, null=True, verbose_name='手机号')),
                ('is_enabled', models.BooleanField(default=False, verbose_name='是否激活')),
                ('key', models.CharField(max_length=256, verbose_name='激活码')),
                ('address', models.CharField(max_length=256, null=True, verbose_name='联系地址')),
                ('end_address', models.CharField(max_length=256, null=True, verbose_name='收货地址')),
                ('gender', models.IntegerField(choices=[(1, '男'), (2, '女')], default=1, verbose_name='性别')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Browsing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='浏览时间')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=256, verbose_name='评论内容')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='评论时间')),
            ],
        ),
        migrations.CreateModel(
            name='Goods',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='商品名称')),
                ('price', models.FloatField(verbose_name='价格')),
                ('stock', models.IntegerField(verbose_name='库存')),
                ('shelf_time', models.DateTimeField(auto_now_add=True, verbose_name='上架时间')),
                ('goods_details', models.CharField(max_length=256, verbose_name='商品详情')),
                ('img_gg', models.FileField(default='good_img/default.png', upload_to='good_img/', verbose_name='广告图片')),
            ],
        ),
        migrations.CreateModel(
            name='GoodsClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=16, verbose_name='商品类别')),
                ('img', models.FileField(default='good_img/default.png', upload_to='good_img/', verbose_name='类别图片')),
                ('style', models.CharField(default='', max_length=16, verbose_name='小图标')),
            ],
        ),
        migrations.CreateModel(
            name='GoodsImg',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.FileField(default='good_img/default.png', upload_to='good_img/', verbose_name='商品图片')),
                ('goods', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app01.Goods', verbose_name='商品ID')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField(verbose_name='商品数量')),
                ('is_pay', models.BooleanField(default=False, verbose_name='是否已经付款')),
                ('pay', models.IntegerField(choices=[(1, '货到付款'), (2, '支付宝'), (3, '微信'), (4, '银行卡')], null=True, verbose_name='付款方式')),
                ('is_deliver', models.BooleanField(default=False, verbose_name='是否发货')),
                ('to_address', models.CharField(default='', max_length=256, verbose_name='发货地址')),
                ('end_address', models.CharField(default='', max_length=256, verbose_name='收货地址')),
                ('order_time', models.DateTimeField(auto_now_add=True, verbose_name='下单时间')),
                ('pay_time', models.DateTimeField(null=True, verbose_name='付款时间')),
                ('deliver_time', models.DateTimeField(null=True, verbose_name='发货时间')),
                ('is_collect', models.BooleanField(default=False, verbose_name='是否收货')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_customer', to=settings.AUTH_USER_MODEL, verbose_name='客户')),
                ('goods', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app01.Goods', verbose_name='商品')),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_seller', to=settings.AUTH_USER_MODEL, verbose_name='商家')),
            ],
        ),
        migrations.CreateModel(
            name='ShoppingCart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField(verbose_name='数量')),
                ('goods', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app01.Goods', verbose_name='商品')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
        ),
        migrations.AddField(
            model_name='goods',
            name='goodsclass',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app01.GoodsClass', verbose_name='类别'),
        ),
        migrations.AddField(
            model_name='goods',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='所属用户'),
        ),
        migrations.AddField(
            model_name='comment',
            name='goods',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app01.Goods', verbose_name='评论的商品'),
        ),
        migrations.AddField(
            model_name='comment',
            name='parent_comment',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app01.Comment', verbose_name='父级评论'),
        ),
        migrations.AddField(
            model_name='comment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='评论人'),
        ),
        migrations.AddField(
            model_name='browsing',
            name='goods',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app01.Goods', verbose_name='商品'),
        ),
        migrations.AddField(
            model_name='browsing',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户'),
        ),
    ]
